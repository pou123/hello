os.loadAPI("File")
local dfpwm = require "cc.audio.dfpwm"
local speaker = peripheral.find("speaker")
local DevScreen1 = peripheral.wrap("monitor_2")
local DevScreen2 = peripheral.wrap("monitor_3")
local DevScreen3 = peripheral.wrap("monitor_4")
local ci = peripheral.wrap("colonyIntegrator_0")
local io = peripheral.wrap("sophisticatedstorage:barrel_0")
local chest = peripheral.find("sophisticatedstorage:controller")
local ar = peripheral.find("arController")
local pl = peripheral.find("playerDetector")
local vault = peripheral.wrap("create:item_vault_1")
local mon = peripheral.wrap("monitor_0")
local mod = peripheral.find("modem")
local chat = peripheral.find("chatBox")
local inv = peripheral.find("inventoryManager")
local invChest = peripheral.wrap("minecraft:barrel_4")
local depW = peripheral.wrap("create:deployer_1")
local depL = peripheral.wrap("create:deployer_0")

--Processors :(
local washer = peripheral.wrap("sophisticatedstorage:barrel_15")
local blaster = peripheral.wrap("sophisticatedstorage:barrel_16")
local smoker = peripheral.wrap("sophisticatedstorage:barrel_17")
local haunter = peripheral.wrap("sophisticatedstorage:barrel_18")
local crusher = peripheral.wrap("sophisticatedstorage:barrel_19")
local procOutput = peripheral.wrap("sophisticatedstorage:barrel_14")
    
--changelog
--since people care about what changed
--it isnt a function cause i fucking hate it >;)
--also since whats the point??

    
local function changelog()
    local changelog = File.Tablize("changelog")
    mon.clear()
    mon.setCursorPos(1,1)
    for i,v in pairs(changelog) do
        local x,y = mon.getCursorPos()
        mon.write(v)
        mon.setCursorPos(x,y+2)
    end
end
    
--tried making a pet :3
--didnt work, ended up abandoning
--Pet Variables
local Pethp = 100
local PetHunger = 100
local PetThirst = 100
--#########
--###  ####
--#     ###
--#     ###
--#    ####
--###  ####
--#########
--Settings file
-- Function to read or create the settings table
function readOrCreateSettings()
    local settingsFileName = ".SettingsFile"
    
    -- Check if the settings file exists
    if fs.exists(settingsFileName) then
        -- If the file exists, read its contents
        local file = fs.open(settingsFileName, "r")
        local contents = file.readAll()
        file.close()
        
        -- Load the Lua table from the file contents and return it
        return textutils.unserialize(contents)
    else
        -- If the file doesn't exist, prompt the user to set it up
        print("Settings file not found. Do you want to set it up? (y/n)")
        local answer = read()

        if answer:lower() == "y" then
            local settings = { 
                Options = {"Colony","Storage"}
            }
                
            -- Save the settings table to the file
            local file = fs.open(settingsFileName, "w")
            file.write(textutils.serialize(settings))
            file.close()
            
            print("Settings file created and set up.")
            
            -- Return the settings table
            return settings
        else
            print("Skipping settings file setup.")
                
            -- Return nil if the user chooses to skip
            return nil
        end
    end
end
    
local function printTable(tbl, indent)
    indent = indent or 0
    for key, value in pairs(tbl) do
        if type(value) == "table" then
            print(string.rep("  ", indent) .. key .. ": {")
            printTable(value, indent + 1)
            print(string.rep("  ", indent) .. "}")
        else
            print(string.rep("  ", indent) .. key .. ": " .. tostring(value))
        end
    end
end
    
--settings Edit
function editSettings(settings)
    if not settings then
        print("Settings table not found.")
        return
    end
        
    print("Current settings:")
    printTable(settings)
        
    print("\nEnter the key you want to edit:")
    local keyToEdit = read()
        
    -- Check if the key exists in the settings table
    if settings[keyToEdit] ~= nil then
        print("Enter the new value:")
        local newValue = read()
        
        if type(settings[keyToEdit]) == "table" then
            settings[keyToEdit] = textutils.unserialise(newValue)
        else
            settings[keyToEdit] = newValue
        end
            
        print("Settings updated and saved to file:")
        printTable(settings)
        local settingsFileName = ".SettingsFile"
        local file = fs.open(settingsFileName, "w")
        file.write(textutils.serialize(settings))
            
        file.close()
    else
        print("Key not found in settings table.")
    end
end
    
--Variables
local Settings = readOrCreateSettings()
local Orders = ci.getWorkOrders()
local selectedOption = 1
local Options = Settings.Options
local repeating = false
local musicfilename = ""
--FUCK THIS \/ I HATE IT
local Processors = Settings.Processors
--DIE FUCKER /\
--idk how these \/ work :,(
local emergencyMessage = "Emergency lockdown"
local alliedUsers = {"Latttte42","prgamer9"}
--I hate these \/ two in particular
local devMode = Settings.devMode
local sleepTime = Settings.Sleep

function findDfpwmFile(input, searchTable)
    for _, fileName in ipairs(searchTable) do
        if fileName == input .. ".dfpwm" then
            return fileName
        end
    end
    return nil
end

local function music()
    print("input file name:")
    local musicfilename1 = read()
    local files = fs.list("")
    local foundfile = findDfpwmFile(musicfilename1,files)
    if foundfile then
        musicfilename = "/"..foundfile
        print("repeat?(y/n)")
        local rep = read()
        if rep == "y" then
            repeating = true
        else
            repeating = false
        end
    else
        print("there is no such file")
        os.sleep(1)
    end
end 
local encoder = dfpwm.make_encoder()
local decoder = dfpwm.make_decoder()
local function musicPlayer()
    while true   do
        if repeating then
            local decoder = dfpwm.make_decoder()
            for input in io.lines(musicfilename, 16 * 1024) do
                local decoded = decoder(input)
                while not speaker.playAudio(decoded) do
                    os.pullEvent("speaker_audio_empty")
                end
            end
        else
            coroutine.yield()
        end
    end
end
        
        --Once i change the searching from item.name to
        --item.displayName half of this script will be useless :((
            
            --KILL MEEEEEEEE
            
local function replaceTank()
    while true do
        for i,v in pairs(pl.getOnlinePlayers()) do
            if v == "prgamer9" then
                pri = true
                break
            else
                pri = false
            end
        end
        if pri == true then
            local items = inv.getItems()
            for i,item in pairs(items) do
                if item.name == "create_sa:large_filling_tank" then
                    if item.nbt.tagStock <= 100 or item.nbt.tagStock == nil then
                        inv.removeItemFromPlayer("south",1,1,"create_sa:large_filling_tank")
                        depW.pushItems(peripheral.getName(invChest),1)
                        depW.pullItems(peripheral.getName(invChest),2)
                        inv.addItemToPlayer("south",1,item.slot)
                    end
                elseif item.name == "create_sa:large_fueling_tank" then
                    if item.nbt.tagStock == nil or item.nbt.tagStock <= 100 then
                        inv.removeItemFromPlayer("south",1,1,"create_sa:large_fueling_tank")
                        depL.pushItems(peripheral.getName(invChest),1)
                        depL.pullItems(peripheral.getName(invChest),2)
                        inv.addItemToPlayer("south",1,item.slot)
                    end 
                end
            end
        end    
    end
end

function findSlash(inputString)
    local slashIndex = string.find(inputString, "/")
    
    if slashIndex then
        local letterBehindSlash = string.sub(inputString, slashIndex - 1, slashIndex - 1)
        local stringWithoutSlash = string.sub(inputString, 1, slashIndex - 2) .. string.sub(inputString, slashIndex + 1)
        print(letterBehindSlash)
        return stringWithoutSlash, letterBehindSlash
    else
        if devMode then print("nil") end
        return inputString, nil
    end
end

--dis shid so fucking sketchy
--i hate it

local function findItemsByName(searchString,chest)
    local items = chest.list()
    local matchingSlots = {}
    local searchStrings = {}
    
    --cus i hate the underscore heres a cool new function
    --also i started adding cooler and longer comments
    --since i like talking to myself :)
    local searchString = string.gsub(searchString, " ", "_")
    
    for searchString in string.gmatch(searchString, "([^,]+)") do
        table.insert(searchStrings, searchString)
    end
    
    for slot, item in pairs(items) do
        if item.name then
            for _, searchString in ipairs(searchStrings) do
                 if string.find(item.name, searchString) then
                    table.insert(matchingSlots,slot)
                end
            end
        end
    end
    return matchingSlots
end

--same as above but returns name and slot
local function findItemsByNameRName(searchString,chest)
    local items = chest.list()
    local searchStrings = {}
    local matchingData = {}
    

    local searchString = string.gsub(searchString, " ", "_")
    
    for searchString in string.gmatch(searchString, "([^,]+)") do
        table.insert(searchStrings, searchString)
    end
    

    for slot, item in pairs(items) do
        if item.name then
            for _, searchString in ipairs(searchStrings) do
                if string.find(item.name, searchString) then
                    local itemDetail = chest.getItemDetail(slot)
                    local Table = {slot,itemDetail.displayName}
                    table.insert(matchingData,Table)
                    break
                end
            end
        end
    end
    return matchingData
end

local function findItemsByName2(searchString,chest)
    local items = chest.list()
    local matchingSlots = {}
    local searchStrings = {}
     
    for searchString in string.gmatch(searchString, "([^,]+)") do
        table.insert(searchStrings, searchString)
    end
    
    --REMEMBER TO CHANGE ITEM.NAME TO ITEM.DISPLAYNAME
    --BY ITERATING THROUGH EACH ITEM'S DETAILS!!!!!!!
    --copied in vs code :sunglasses:
    for slot, item in pairs(items) do
        if item.name then
            for _, searchString in ipairs(searchStrings) do
                local itemDetail = chest.getItemDetail(slot)
                if string.find(string.lower(itemDetail.displayName), string.lower(String)) then
                    table.insert(matchingSlots,slot)
                    break
                end
            end
        end
    end
    return matchingSlots
end


    
--MainColony
local function ColonyHandler()
	while true do
	term.setCursorPos(1,1)
	term.clear()
	print("id  name")
	print("----------------------")
	for i, order in ipairs(Orders) do
	    print(order.id.." "..order.buildingName)
	end
	print("input Id to request Items, Enter Q to exit:")
	local Id = read()
	if tonumber(Id) then
	    local Id = tonumber(Id)
	
	    --get Resource
 	   local Resources = ci.getWorkOrderResources(Id)
  	  for i, resource in ipairs(Resources) do
 	       local slots = findItemsByName(resource.item,chest)
  	      if #slots > 0 then
  	          for i, slot in ipairs(slots) do
     	           io.pullItems(peripheral.getName(chest), slot, resource.needed)
  	          end
		  end
	    end
	elseif Id == "q" then
	    print("program terminated")
		os.sleep(sleepTime)
  break
	end
	end
end

-- Main storage

-- Function to display items on a page
-- THERES SO MUCH PAGES YET YO MAMA STILL CANT FIT
local function displayPage(page, pageSize, chest)
    term.clear()
    term.setCursorPos(1, 1)
    print("Slot   Item Name        Count")
    print("---------------------------------")
    
    local totalSlots = chest.size()
    local items = chest.list()
    
    local startSlot = (page - 1) * pageSize + 1
    local endSlot = startSlot + pageSize - 1
    endSlot = math.min(endSlot, totalSlots)
    
    for slot = startSlot, endSlot do
        
        if slot <= totalSlots then
            local item = items[slot]
            
            if slot and item then
                local itemDetail = chest.getItemDetail(slot)
                print(("%d %-15s"):format(slot, itemDetail.displayName))
                local x,y = term.getCursorPos()
                term.setCursorPos(44,y-1)
                term.write(item.count)
                term.setCursorPos(1 , y)
                
            end
        end
    end

    print("---------------------------------")
    print("Page " .. page .. "/" .. math.ceil(chest.size() / pageSize))
end

function writeWrappedText(text, monitor)
    local monitorWidth, monitorHeight = monitor.getSize()
    
    if #text > monitorWidth then
        local words = {}
        
        -- Split the text into words
        for word in text:gmatch("%S+") do
            table.insert(words, word)
        end
        
        local lines = {""}
        local currentLine = 1
        
        for _, word in ipairs(words) do
            local line = lines[currentLine]
            if line and word then
                if #line + #word + 1 <= monitorWidth then
                    lines[currentLine] = line .. word .. " "
                else
                    currentLine = currentLine + 1
                    lines[currentLine] = word .. " "
                end
            end
        end
        
        for i, line in ipairs(lines) do
            local _,y = monitor.getCursorPos()
            monitor.setCursorPos(1, y+i)
            monitor.write(line)
        end
    else
        monitor.write(text)
    end
end


--dis fo me
local function DevScreen()
    DevScreen1.clear()
    DevScreen2.clear()
    DevScreen3.clear()
    DevScreen1.setCursorPos(1,1)
    DevScreen2.setCursorPos(1,1)
    DevScreen3.setCursorPos(1,1)
    while true do
        --local event, username, message, uuid, isHidden = os.pullEvent("chat")
        local event, p1, p2, p3, p4 = os.pullEvent( )
        if event == "chat" then
            if p4 then
                local text = "(hidden)"..p1..": "..p2
                writeWrappedText(text,DevScreen2)
            else 
                local text = p1..": "..p2
                writeWrappedText(text,DevScreen2)
            end
            local _, y = DevScreen2.getCursorPos()
            DevScreen2.setCursorPos(1,y+1)
            local monitorWidth, monitorHeight = DevScreen2.getSize()
            if y >= monitorHeight-1 then
                 DevScreen2.scroll(1)
                 DevScreen2.setCursorPos(1,monitorHeight - 1) 
            end
        end
    end
end
local function Crafting()
    print("W.I.P")
    os.sleep(3)
end

--Why didnt i just make some kind of  "getKeyBoardInput" script ;,<
--Im such an idiot

--Proccessing :3
--a little lower, under prSpeed
--Thanz latte for making those modules!!
function prSpeed()
    local pos = {}
    local newpos = {}
    while true do
        for i,v in pairs(pl.getOnlinePlayers()) do
            if v == "prgamer9" then
                pri = true
                break
            else 
                pri = false
            end
        end
        if pri then
        pos = pl.getPlayerPos("prgamer9")
        os.sleep(1)
        newpos = pl.getPlayerPos("prgamer9")
        if pos.x and pos.y and pos.z and newpos.x and newpos.y and newpos.z then
            
            local xspeed = (newpos.x - pos.x)/2
            local yspeed = (newpos.y - pos.y)/2
            local zspeed = (newpos.z - pos.z)/2
            local speed = math.floor(math.sqrt(xspeed^2+yspeed^2+zspeed^2))
            ar.clear()
            ar.drawString("Speed: "..speed*(3+3/5).."km/h",1,1,colors.green)
            ar.drawString("Speed: "..speed.."m/s",1,10,colors.green)
            ar.drawString("Pitch: "..0-math.floor(newpos.pitch),1,20,colors.green)
        else
            ar.drawString("NaN",1,1,colors.green)
        end
        local players = pl.getOnlinePlayers()
        for i,player in ipairs(players) do
            local playerData = pl.getPlayerPos(player)
            i = i+3
            if playerData.x and playerData.y and playerData.z then
                ar.drawString(player..": "..playerData.x..", "..playerData.y..", "..playerData.z,1, i*10, colors.green)
            else
                ar.drawString(player..": NaN",1,i*10,colors.green)
            end
        end
    end
    end
end



--here it is
function Processing()
    local option = 1
    local currentProc = nil
    while true do
        local items = chest.list()
        local itemDetail = {}
        term.clear()
        term.setCursorPos(1,1)
        print("processing machine")
        print("-------------------")
        for i,Proc in pairs(Processors) do
            
            if option == i then
                print("-"..Proc)
                currentProc = Proc
            else
                print(Proc)
            end
        end
        print("-------------------")
        print("Q to exit, enter to use")
        if devMode then
            print(option)
        end
        local event, key, is_held = os.pullEvent("key")
        if devMode then
            print(keys.getName(key))
        end
        if key == keys.down and option < #Processors then
            option = option + 1 
        elseif key == keys.up and option > 1 then
            option = option - 1 
        elseif key == keys.enter then
            print("item name: ")
            local itemName = string.lower(read())
            print("item ammount: ")
            local itemAmmount = tonumber(read())
            for slot,item in pairs(items) do
                if item then
                    itemDetail = chest.getItemDetail(slot)
                    if devMode then
                        print(string.lower(itemDetail.displayName))
                        print(itemName)
                    end
                    if string.lower(itemDetail.displayName) == itemName then
                        if devMode then
                            print(currentProc)
                        end
                        if option == 1 then
                            for i=1,itemAmmount do
                                chest.pushItems(peripheral.getName(washer),slot,1)
                            end
                        elseif option == 2 then
                            for i=1,itemAmmount do
                                chest.pushItems(peripheral.getName(blaster),slot,1)
                            end
                        elseif option == 3 then
                            for i=1,itemAmmount do
                                chest.pushItems(peripheral.getName(smoker),slot,1)
                            end
                        elseif option == 4 then
                            for i=1,itemAmmount do
                                chest.pushItems(peripheral.getName(haunter),slot,1)
                            end
                        elseif option == 5 then
                            for i=1,itemAmmount do
                                chest.pushItems(peripheral.getName(crusher),slot,1)
                            end
                        end
                    end
                end
            end
        elseif key == keys.q then
            break
        end
    end
end
        

-- Function to handle user input
local function handleUserInput(page, pageSize, chest, io)
    while true do
        displayPage(page, pageSize, chest)
        print("e Enter slot, d Next page, a Previous page, w push into storage,s search by name, q Quit:")
        local event, key, isHeld = os.pullEvent("key")
        local input = keys.getName(key)
        if input == "s" then
            os.sleep(0.2)
            local read = read()
            local read, setting = findSlash(read)
            if devMode and setting then
            print(setting)
            local event, key = os.pullEvent( "key" )
            end
            if setting == "n" or not setting then
                local found = findItemsByName(read,chest)
                if found then
                    for _, slot in ipairs(found) do
                        local data = chest.getItemDetail(slot)
                        if devMode then
                            print(slot.." "..data.displayName.." "..data.count)
                            os.sleep(0.7)
                        end
                        for i=1,math.ceil(data.count/64),1 do
                            if devMode then
                                print(i)
                            end
                            chest.pushItems(peripheral.getName(io),slot)
                        end
                    end
                end
            elseif settng == "b" then
                local found = findItemsByName2(read,chest)
                if found then
                    for _, slot in ipairs(found) do
                        chest.pushItems(peripheral.getName(io), slot)
                    end
                end
            os.sleep(sleepTime)
            end
        elseif input == "q" then
            print(input)
            break
        elseif input == "d" then
            if (page * pageSize) < chest.size() then
                page = page + 1
            end
        elseif input == "a" then
            if page > 1 then
                page = page - 1
            end
        elseif  input == "w" then
            print(input)
            for i = 1, io.size() do
                for slot,item in pairs(io.list()) do
                    if item.count >= 0 then
                        io.pushItems(peripheral.getName(chest), slot)
                    end
                end
            end
        elseif input == "e" then
            os.sleep(0.1)
            local read = read()
            if not tonumber(read) then
            print("not a number")
            os.sleep(1)
            else
            local slot = tonumber(read)
            local items = chest.list()
    
            if slot >= 1 and slot <= chest.size() then
                local item = items[slot]
                if item then
                    print(slot)
                    chest.pushItems(peripheral.getName(io), slot)
                    print("Transferred " .. item.count .. " " .. item.name .. " to another storage.")
                    sleep(sleepTime)
                else
                    print("slot empty")
                    sleep(sleepTime)
                end
            else
                print("Slot unavailable.")
                sleep(sleepTime)
            end
            end
        end
    end
end

-- Main function to start the storage controller
local function StorageHandler()
    if not chest then
        print("Sophisticated Storage Controller not found.")
        return
    end

    local pageSize = 12 -- Number of items to display per page
    local page = 1

    handleUserInput(page, pageSize, chest, io)
end

local function procPush()
    while true do
        for i = 1, procOutput.size() do
            procOutput.pushItems(peripheral.getName(io), i)
        end
    end
end

local function vaultPush()
    while true do
        for i = 1, vault.size() do
            vault.pushItems(peripheral.getName(chest), i)
        end
    end
end

local function Setup()
	term.clear()
	term.setCursorPos(1,1)
end

--Menu
local function drawMenu()
    if devMode then
    print("N.B.O.S Dev Mode")
    else
    print("N.B.O.S")
    end
    print("------------")
    print("Enter S to settings, Enter Q to exit")
    for i, option in ipairs(Options) do
        if i == selectedOption then 
            print("- " .. option)
        else
            print(option)
        end
    end
end
--check for cool thing
function checkEmergency()
    while true do
    local event, username, message, uuid, isHidden = os.pullEvent("chat")
    for i,AlliedUser in ipairs(alliedUsers) do
        if username == alliedUser and message == emergencyMessage then
        Emergency = true
        term.clear()
        print("emergency override enabled")
        print("system on lockdown")
        else
        break
        end
    end
    end
end

local function main()
    while true do
        if Emergency == true then
        break
        else
            Setup()
            drawMenu()
            local event, key, is_held = os.pullEvent("key")
            if key == keys.q then
                print("program stopped")
               break
            elseif key == keys.up and selectedOption > 1 then
                selectedOption = selectedOption - 1
            elseif key == keys.down and selectedOption < #Options then
                selectedOption = selectedOption + 1
            elseif key == keys.enter then
                if selectedOption == 1 then
                    ColonyHandler()
                elseif selectedOption == 2 then
                    StorageHandler()
                elseif selectedOption == 3 then
                    Processing()
                elseif selectedOption == 4 then
                    Crafting()
                elseif selectedOption == 5 then
                    music()
                end
            end
        end 
    end
end

-- collision detector
function checkCollision(obj1, obj2)
    -- Check if obj1 and obj2 have the required fields
    if not (obj1.id and obj1.position and obj1.size and obj2.id and obj2.position and obj2.size) then
        error("Invalid object format")
    end

    -- Extract data from objects
    local id1, pos1, size1 = obj1.id, obj1.position, obj1.size
    local id2, pos2, size2 = obj2.id, obj2.position, obj2.size

    -- Check for collision
    local collides = not (pos1.x + size1.width < pos2.x or
                         pos1.x > pos2.x + size2.width or
                         pos1.y + size1.height < pos2.y or
                         pos1.y > pos2.y + size2.height)

    return collides
end

local function supplyItems()
    while true do
        local event, username, message, uuid, isHidden = os.pullEvent("chat")
        for i,v in pairs(alliedUsers) do
            if string.lower(v) == string.lower(username) then
                local messageStart = string.sub(message,1,8)
                if messageStart == "item get" then
                    local Data = findItemsByNameRName(string.sub(message,9,string.len(message)),chest)
                    chat.sendMessageToPlayer("choose item:",v,"Computer")
                    for k,vi in pairs(Data) do
                        os.sleep(1)
                        chat.sendMessageToPlayer(vi[1]..": "..vi[2],v,"Computer")
                    end
                    local event, username1, message1, uuid, isHidden = os.pullEvent("chat")
                    for i,v1 in pairs(alliedUsers) do
                        if string.lower(username) == string.lower(username1) then
                            local message1 = tonumber(message1)
                            if message1 then
                            chest.pushItems(peripheral.getName(io),message1)
                            end
                        end
                    end
                end
            end
        end
    end
end
changelog()
parallel.waitForAny(prSpeed, main, vaultPush,checkEmergency,replaceTank,supplyItems,procPush,DevScreen,musicPlayer)

--listening to yeat :glasses:
--also why did i merge all the scripts  ??????
--ah yes because ar glasses cool
--i should do something with that animatronic
--wanna die );
--using vs code helps a lot

        





        
        
        
